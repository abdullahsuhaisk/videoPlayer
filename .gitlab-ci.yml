stages:
  - build
  - deploy-staging
  - deploy-production

build:
  image: node:carbon-alpine
  stage: build
  only:
    - develop
    - master
    - production
  artifacts:
    untracked: true
  script:
    - if [ "$CI_COMMIT_REF_NAME" == "develop" ]; then cp env.staging .env; fi
    - if [ "$CI_COMMIT_REF_NAME" == "master" ]; then cp env.staging .env; fi
    - if [ "$CI_COMMIT_REF_NAME" == "production" ]; then cp env.production .env; fi
    - npm install
    - unset CI
    - npm run build

deploy-staging:
  image: google/cloud-sdk:alpine
  stage: deploy-staging
  only:
    - master
  dependencies:
    - build
  script:
    - echo $SERVICE_ACCOUNT > service-account.json
    - gcloud auth activate-service-account --key-file service-account.json
    - gcloud --quiet --project $PROJECT_ID app deploy app-staging.yaml
  after_script:
    - rm -rf service-account.json

deploy-production:
  image: google/cloud-sdk:alpine
  stage: deploy-production
  only:
    - production
  dependencies:
    - build
  script:
    - echo $SERVICE_ACCOUNT > service-account.json
    - gcloud auth activate-service-account --key-file service-account.json
    - gcloud --quiet --project $PROJECT_ID app deploy app-production.yaml
  after_script:
    - rm -rf service-account.json